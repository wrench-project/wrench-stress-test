FROM ubuntu:jammy

MAINTAINER Henri Casanova <henric@hawaii.edu>

ENV SIMGRID_VERSION="3.36"
ENV WRENCH_VERSION="2.3"

#################################################
# INSTALL WRENCH
#################################################

USER root
WORKDIR /tmp

RUN apt-get update

RUN apt-get install -y wget g++ gcc 
RUN apt-get install -y sudo
RUN apt-get install -y python3
RUN apt-get install -y doxygen
RUN apt-get install -y ghostscript
RUN apt-get install -y cmake
RUN apt-get install -y libboost-all-dev
RUN apt-get install -y glpk-utils
RUN apt-get install -y git
RUN apt-get install -y vim
RUN apt-get install -y time


# install pugixml
#RUN wget https://github.com/zeux/pugixml/releases/download/v1.8.1/pugixml-1.8.1.tar.gz && tar -xf pugixml-1.8.1.tar.gz && cd pugixml-1.8 && cmake . && make -j8 && sudo make install && cd .. && rm -rf pugixml-1.8*

# install json for modern c++
RUN wget https://github.com/nlohmann/json/archive/refs/tags/v3.10.5.tar.gz && tar -xf v3.10.5.tar.gz && cd json-3.10.5 && cmake . && make -j4 && make install && cd .. && rm -rf v3.10.5* json-3.10.5


# install googletest
#RUN wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz && tar xf release-1.8.0.tar.gz && cd googletest-release-1.8.0/googletest && cmake . && make -j8 && sudo make install && cd ../.. && rm -rf release-1.8.0.tar.gz googletest-release-1.8.0

# instal SIMGRID
RUN wget https://framagit.org/simgrid/simgrid/-/archive/v${SIMGRID_VERSION}/simgrid-v${SIMGRID_VERSION}.tar.gz && tar -xf simgrid-v${SIMGRID_VERSION}.tar.gz && cd simgrid-v${SIMGRID_VERSION} && cmake . && make -j8 && sudo make install && cd .. && rm -rf simgrid-v${SIMGRID_VERSION}*


# install WRENCH
RUN wget https://github.com/wrench-project/wrench/archive/refs/tags/v${WRENCH_VERSION}.tar.gz && tar -xzf v${WRENCH_VERSION}.tar.gz && cd wrench-${WRENCH_VERSION} && cmake . && make -j8 && sudo make install


#################################################
# WRENCH's user
#################################################


RUN useradd -ms /bin/bash wrench &&   echo 'wrench:wrench' | chpasswd
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
RUN adduser wrench sudo

USER wrench
WORKDIR /home/wrench

# set user's environment variable
ENV CXX="g++-9" CC="gcc-9"
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib

# Set wrench-stress-test-specific enviornment variables
ENV WRENCH_FIRST_ARG="WORKFLOW"
ENV WRENCH_LOGGING=""
ENV WRENCH_BUFFERSIZE=" 10485760"
